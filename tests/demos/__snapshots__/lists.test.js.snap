// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`demos/components/lists renders itself correctly 1`] = `
<section>
  <h1>
    List examples
  </h1>
  <div>
    <div
      className="mdc-list-group"
    >
      <h3
        className="mdc-list-group__subheader"
      >
        header1
      </h3>
      <ul
        className="mdc-list"
      >
        <li
          className="mdc-list-item"
          onKeyPress={[Function]}
          role="menuitem"
        >
          item1
        </li>
        <li
          className="mdc-list-item"
          onKeyPress={[Function]}
          role="menuitem"
        >
          item2
        </li>
        <li
          className="mdc-list-divider"
          role="separator"
        />
        <li
          className="mdc-list-item"
          onKeyPress={[Function]}
          role="menuitem"
        >
          item3
        </li>
        <li
          className="mdc-list-item"
          onKeyPress={[Function]}
          role="menuitem"
        >
          item4
        </li>
      </ul>
      <hr
        className="mdc-list-divider"
      />
      <h3
        className="mdc-list-group__subheader"
      >
        header2
      </h3>
      <ul
        className="mdc-list"
      >
        <li
          className="mdc-list-item"
          onKeyPress={[Function]}
          role="menuitem"
        >
          item1
        </li>
        <li
          className="mdc-list-item"
          onKeyPress={[Function]}
          role="menuitem"
        >
          item2
        </li>
        <li
          className="mdc-list-divider"
          role="separator"
        />
        <li
          className="mdc-list-item"
          onKeyPress={[Function]}
          role="menuitem"
        >
          item3
        </li>
        <li
          className="mdc-list-item"
          onKeyPress={[Function]}
          role="menuitem"
        >
          item4
        </li>
      </ul>
    </div>
  </div>
  <div
    style={
      Object {
        "padding": "16px",
      }
    }
  >
    <ul
      className="mdc-list mdc-list--avatar-list"
    >
      <li
        className="mdc-list-item"
        onKeyPress={[Function]}
        role="menuitem"
      >
        <img
          alt="Brown Bear"
          className="mdc-list-item__graphic"
          height={56}
          src="https://material-components-web.appspot.com/images/animal3.svg"
          width={56}
        />
        Brown Bear
        <i
          className="mdc-list-item__meta material-icons"
          href={null}
          style={
            Object {
              "color": "#ff4081",
            }
          }
          type="a"
        >
          favorite
        </i>
      </li>
      <li
        className="mdc-list-item"
        onKeyPress={[Function]}
        role="menuitem"
      >
        <img
          alt="Panda"
          className="mdc-list-item__graphic"
          height={56}
          src="https://material-components-web.appspot.com/images/animal1.svg"
          width={56}
        />
        Panda
        <i
          className="mdc-list-item__meta material-icons"
          href={null}
          style={
            Object {
              "color": "#ff4081",
            }
          }
          type="a"
        >
          favorite_border
        </i>
      </li>
      <li
        className="mdc-list-item"
        onKeyPress={[Function]}
        role="menuitem"
      >
        <img
          alt="Sloth"
          className="mdc-list-item__graphic"
          height={56}
          src="https://material-components-web.appspot.com/images/animal2.svg"
          width={56}
        />
        Sloth
        <i
          className="mdc-list-item__meta material-icons"
          href={null}
          style={
            Object {
              "color": "#ff4081",
            }
          }
          type="a"
        >
          favorite_border
        </i>
      </li>
    </ul>
  </div>
  <div
    style={
      Object {
        "padding": "16px",
      }
    }
  >
    <ul
      className="mdc-list mdc-list--two-line"
    >
      <li
        className="mdc-list-item"
        onKeyPress={[Function]}
        role="menuitem"
      >
        <span
          className="mdc-list-item__text"
        >
          Two-line item
          <span
            className="mdc-list-item__secondary-text"
          >
            Secondary text
          </span>
        </span>
        <span
          className="mdc-list-item__meta"
        >
          $10.00
        </span>
      </li>
      <li
        className="mdc-list-item"
        onKeyPress={[Function]}
        role="menuitem"
      >
        <span
          className="mdc-list-item__text"
        >
          Two-line item
          <span
            className="mdc-list-item__secondary-text"
          >
            Secondary text
          </span>
        </span>
        <span
          className="mdc-list-item__meta"
        >
          $20.00
        </span>
      </li>
      <li
        className="mdc-list-item"
        onKeyPress={[Function]}
        role="menuitem"
      >
        <span
          className="mdc-list-item__text"
        >
          Two-line item
          <span
            className="mdc-list-item__secondary-text"
          >
            Secondary text
          </span>
        </span>
        <span
          className="mdc-list-item__meta"
        >
          $30.00
        </span>
      </li>
    </ul>
  </div>
  <h2>
    List Properties
  </h2>
  <div
    className="mdc-layout-grid"
  >
    <div
      className="mdc-layout-grid__inner"
    >
      <div
        className="mdc-layout-grid__cell"
      >
        Name
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
        Type
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
        Desc
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        children
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        node
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        These are usually ListItems that are passed to be part of the list.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        style
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        object
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Override the inline-styles of the root element.
         
      </div>
    </div>
  </div>
  <h2>
    List Item Properties
  </h2>
  <div
    className="mdc-layout-grid"
  >
    <div
      className="mdc-layout-grid__inner"
    >
      <div
        className="mdc-layout-grid__cell"
      >
        Name
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
        Type
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
        Desc
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        autoGenerateNestedIndicator
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        bool
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        If true,  generate a nested-list-indicator icon when nested list items are detected. Note that an indicator will not be created if a rightIcon or rightIconButton has been provided to the element.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        children
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        node
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Children passed into the ListItem.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        containerElement
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        union:stringelement'span'
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        The element to use as the container for the ListItem. Either a string to use a DOM element or a ReactElement. This is useful for wrapping the ListItem in a custom Link component. If a ReactElement is given,  ensure that it passes all of its given props through to the underlying DOM element and renders its children prop for proper integration.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        disableKeyboardFocus
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        bool
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        If true,  the element will not be able to be focused by the keyboard.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        disabled
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        bool
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        If true,  the element will not be clickable and will not display hover effects. This is automatically disabled if either leftCheckbox or rightToggle is set.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        hoverColor
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        string
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Override the hover background color.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        initiallyOpen
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        bool
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        If true,  the nested ListItems are initially displayed.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        innerDivStyle
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        object
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Override the inline-styles of the inner div element.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        insetChildren
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        bool
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        If true,  the children will be indented by 72px. This is useful if there is no left avatar or left icon.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        isKeyboardFocused
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        bool
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Use to control if the list item should render as keyboard focused. If undefined (default),  this will be automatically managed. If provided,  it will change the components style. Note that this will not change the actual focus - and should only be used when you want to simulate keyboard focus (eg. in a rich text input autocomplete).
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        leftAvatar
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        element
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the Avatar element to be displayed on the left side.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        leftCheckbox
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        element
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the Checkbox element to be displayed on the left side.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        leftIcon
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        element
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the SvgIcon or FontIcon to be displayed on the left side.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        nestedItems
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        arrayOf
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        An array of ListItems to nest underneath the current ListItem.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        nestedLevel
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        number
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Controls how deep a ListItem appears. This property is automatically managed,  so modify at your own risk.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        nestedListStyle
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        object
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Override the inline-styles of the nested items' NestedList.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        onClick
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        function
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Callback function fired when the list item is clicked.Signature: function(event: object) =&gt; void event: Click event targeting the list item.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        onKeyboardFocus
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        function
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Callback function fired when the ListItem is focused or blurred by the keyboard. Signature: function(event: object,  isKeyboardFocused: boolean) =&gt; void event: focus or blur event targeting the ListItem. isKeyboardFocused: If true,  the ListItem is focused.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        onNestedListToggle
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        function
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Callback function fired when the ListItem toggles its nested list.Signature: function(listItem: object) =&gt; voidlistItem: The ListItem.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        open
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        bool
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Control toggle state of nested list.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        primaryText
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        node
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the block element that contains the primary text. If a string is passed in,  a div tag will be rendered.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        primaryTogglesNestedList
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        bool
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        If true,  clicking or tapping the primary text of the ListItem toggles the nested list.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        rightAvatar
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        element
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the Avatar element to be displayed on the right side.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        rightIcon
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        element
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the SvgIcon or FontIcon to be displayed on the right side.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        rightIconButton
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        element
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the IconButton to be displayed on the right side. Hovering over this button will remove the ListItem hover. Also,  clicking on this button will not trigger a ripple on the ListItem; the event will be stopped and prevented from bubbling up to cause a ListItem click.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        rightToggle
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        element
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the Toggle element to display on the right side.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        secondaryText
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        node
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        This is the block element that contains the secondary text. If a string is passed in,  a div tag will be rendered.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        secondaryTextLines
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        enum:1, 2
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Can be 1 or 2. This is the number of secondary text lines before ellipsis will show.
         
      </div>
    </div>
    <div
      className="mdc-layout-grid__inner"
      style={
        Object {
          "paddingBottom": "16px",
        }
      }
    >
      <div
        className="mdc-layout-grid__cell"
      >
         
        style
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        object
         
      </div>
      <div
        className="mdc-layout-grid__cell"
      >
         
        Override the inline-styles of the root element.
         
      </div>
    </div>
  </div>
</section>
`;
